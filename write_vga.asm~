; Disassembly of file: write_vga.o
; Fri Jul 14 14:08:42 2017
; Mode: 32 bits
; Syntax: YASM/NASM
; Instruction set: 80386






CMain:  ; Function begin
        push    ebp                                     ; 0000 _ 55
        mov     ebp, esp                                ; 0001 _ 89. E5
        sub     esp, 24                                 ; 0003 _ 83. EC, 18
        mov     dword [ebp-0CH], 0                      ; 0006 _ C7. 45, F4, 00000000
        mov     dword [ebp-10H], 655360                 ; 000D _ C7. 45, F0, 000A0000
        jmp     ?_002                                   ; 0014 _ EB, 10

?_001:  mov     eax, dword [ebp-10H]                    ; 0016 _ 8B. 45, F0
        mov     dword [ebp-0CH], eax                    ; 0019 _ 89. 45, F4
        mov     eax, dword [ebp-0CH]                    ; 001C _ 8B. 45, F4
        mov     byte [eax], 1                           ; 001F _ C6. 00, 01
        add     dword [ebp-10H], 1                      ; 0022 _ 83. 45, F0, 01
?_002:  cmp     dword [ebp-10H], 720895                 ; 0026 _ 81. 7D, F0, 000AFFFF
        jle     ?_001                                   ; 002D _ 7E, E7
?_003:  call    io_hlt                                  ; 002F _ E8, FFFFFFFC(rel)
        jmp     ?_003                                   ; 0034 _ EB, F9
; CMain End of function

init_palette:; Function begin
        push    ebp                                     ; 0036 _ 55
        mov     ebp, esp                                ; 0037 _ 89. E5
        sub     esp, 24                                 ; 0039 _ 83. EC, 18
        mov     dword [esp+8H], table_rgb.1391          ; 003C _ C7. 44 24, 08, 00000000(d)
        mov     dword [esp+4H], 15                      ; 0044 _ C7. 44 24, 04, 0000000F
        mov     dword [esp], 0                          ; 004C _ C7. 04 24, 00000000
        call    set_palette                             ; 0053 _ E8, FFFFFFFC(rel)
        nop                                             ; 0058 _ 90
        leave                                           ; 0059 _ C9
        ret                                             ; 005A _ C3
; init_palette End of function

set_palette:; Function begin
        push    ebp                                     ; 005B _ 55
        mov     ebp, esp                                ; 005C _ 89. E5
        sub     esp, 40                                 ; 005E _ 83. EC, 28
        call    io_load_eflags                          ; 0061 _ E8, FFFFFFFC(rel)
        mov     dword [ebp-0CH], eax                    ; 0066 _ 89. 45, F4
        call    io_cli                                  ; 0069 _ E8, FFFFFFFC(rel)
        mov     eax, dword [ebp+8H]                     ; 006E _ 8B. 45, 08
        mov     dword [esp+4H], eax                     ; 0071 _ 89. 44 24, 04
        mov     dword [esp], 968                        ; 0075 _ C7. 04 24, 000003C8
        call    io_out8                                 ; 007C _ E8, FFFFFFFC(rel)
        mov     eax, dword [ebp+8H]                     ; 0081 _ 8B. 45, 08
        mov     dword [ebp-10H], eax                    ; 0084 _ 89. 45, F0
        jmp     ?_005                                   ; 0087 _ EB, 59

?_004:  mov     eax, dword [ebp+10H]                    ; 0089 _ 8B. 45, 10
        movzx   eax, byte [eax]                         ; 008C _ 0F B6. 00
        movzx   eax, al                                 ; 008F _ 0F B6. C0
        mov     dword [esp+4H], eax                     ; 0092 _ 89. 44 24, 04
        mov     dword [esp], 969                        ; 0096 _ C7. 04 24, 000003C9
        call    io_out8                                 ; 009D _ E8, FFFFFFFC(rel)
        mov     eax, dword [ebp+10H]                    ; 00A2 _ 8B. 45, 10
        add     eax, 1                                  ; 00A5 _ 83. C0, 01
        movzx   eax, byte [eax]                         ; 00A8 _ 0F B6. 00
        movzx   eax, al                                 ; 00AB _ 0F B6. C0
        mov     dword [esp+4H], eax                     ; 00AE _ 89. 44 24, 04
        mov     dword [esp], 969                        ; 00B2 _ C7. 04 24, 000003C9
        call    io_out8                                 ; 00B9 _ E8, FFFFFFFC(rel)
        mov     eax, dword [ebp+10H]                    ; 00BE _ 8B. 45, 10
        add     eax, 2                                  ; 00C1 _ 83. C0, 02
        movzx   eax, byte [eax]                         ; 00C4 _ 0F B6. 00
        movzx   eax, al                                 ; 00C7 _ 0F B6. C0
        mov     dword [esp+4H], eax                     ; 00CA _ 89. 44 24, 04
        mov     dword [esp], 969                        ; 00CE _ C7. 04 24, 000003C9
        call    io_out8                                 ; 00D5 _ E8, FFFFFFFC(rel)
        add     dword [ebp+10H], 3                      ; 00DA _ 83. 45, 10, 03
        add     dword [ebp-10H], 1                      ; 00DE _ 83. 45, F0, 01
?_005:  mov     eax, dword [ebp-10H]                    ; 00E2 _ 8B. 45, F0
        cmp     eax, dword [ebp+0CH]                    ; 00E5 _ 3B. 45, 0C
        jle     ?_004                                   ; 00E8 _ 7E, 9F
        mov     eax, dword [ebp-0CH]                    ; 00EA _ 8B. 45, F4
        mov     dword [esp], eax                        ; 00ED _ 89. 04 24
        call    io_store_eflags                         ; 00F0 _ E8, FFFFFFFC(rel)
        nop                                             ; 00F5 _ 90
        leave                                           ; 00F6 _ C9
        ret                                             ; 00F7 _ C3
; set_palette End of function



table_rgb.1391:                                         ; byte
        db 00H, 00H, 00H, 0FFH, 00H, 00H, 00H, 0FFH     ; 0000 _ ........
        db 00H, 0FFH, 0FFH, 00H, 00H, 00H, 0FFH, 0FFH   ; 0008 _ ........
        db 00H, 0FFH, 00H, 0FFH, 0FFH, 0FFH, 0FFH, 0FFH ; 0010 _ ........
        db 0C6H, 0C6H, 0C6H, 84H, 00H, 00H, 00H, 84H    ; 0018 _ ........
        db 00H, 84H, 84H, 00H, 00H, 00H, 84H, 84H       ; 0020 _ ........
        db 00H, 84H, 00H, 84H, 84H, 84H, 84H, 84H       ; 0028 _ ........




